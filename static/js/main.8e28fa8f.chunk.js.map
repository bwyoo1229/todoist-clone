{"version":3,"sources":["libs/firebase.js","libs/firebase-config.js","constants/index.js","helpers/index.js","hooks/use-tasks.js","contexts/projects-context.js","hooks/use-projects.js","contexts/selected-projects-context.js","components/tasks.js","components/checkbox.js","components/projects.js","components/individual-project.js","components/add-project.js","components/add-task.js","components/project-overlay.js","components/task-date.js","layouts/header.js","layouts/content.js","layouts/sidebar.js","App.js","index.js"],"names":["firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","getCollatedTasks","find","task","getTitle","projects","project","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","useTasks","useState","tasks","setTasks","archivedTasks","setArchivedTasks","useEffect","userQuery","firestore","collection","where","projectQuery","isProjectIdNotCollatedTasks","moment","format","onSnapshot","snapshot","newTasks","docs","map","data","filter","date","diff","archived","archive","error","Error","message","ProjectsContext","createContext","ProjectsProvider","children","setProjects","orderBy","get","then","allProjects","docId","JSON","stringify","useProjects","Provider","value","SelectedProjectsContext","SelectedProjectsProvider","selectedProjects","setSelectedProjects","Tasks","useContext","projectName","getCollatedTitle","className","Checkbox","AddTask","onClick","doc","update","Projects","activeValue","active","setActive","data-doc-id","IndividualProject","showConfirm","setShowConfirm","delete","AddProject","shouldShow","show","setShow","setProjectName","onChange","e","target","type","placeholder","add","userId","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","setTaskDate","setProject","showMain","setShowMain","showProjectOverlay","setShowProjectOverlay","showTaskDate","setShowTaskDate","selectedProject","addTask","collatedDate","ProjectOverlay","TaskDate","Header","darkMode","setDarkMode","showSidebar","setShowSidebar","setShouldShowMain","src","alt","Content","Sidebar","showProjects","setShowProjects","undefined","App","darkModeDefault","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e28fa8f.chunk.js","sourcesContent":["import Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { config } from './firebase-config';\n\nexport const firebase = Firebase.initializeApp(config);\n","export const config = {\n  apiKey: 'AIzaSyBpNdcdoRTZD5WRyFQk_EEQEf15PoJMa2o',\n  authDomain: 'todoist-clone-3dcfe.firebaseapp.com',\n  projectId: 'todoist-clone-3dcfe',\n  storageBucket: 'todoist-clone-3dcfe.appspot.com',\n  messagingSenderId: '799400830361',\n  appId: '1:799400830361:web:4aa4e5c24ac913c6b79f08',\n};\n","export const collatedTasks = [\n  { key: 'INBOX', name: 'Inbox' },\n  { key: 'TODAY', name: 'Today' },\n  { key: 'NEXT_7_DAYS', name: 'Next 7 days' },\n];\n","import { collatedTasks } from '../constants';\n\nexport const getCollatedTasks = projectId =>\n  collatedTasks.find(task => task.key === projectId);\n\nexport const getTitle = (projects, projectId) =>\n  projects.find(project => project.projectId === projectId);\n\nexport const getCollatedTitle = (projects, key) =>\n  projects.find(project => project.key === key);\n\n// Generate random push id for key;\nexport const generatePushId = (() => {\n  const PUSH_CHARS =\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\n  const lastRandChars = [];\n\n  return function () {\n    let now = new Date().getTime();\n\n    const timeStampChars = new Array(8);\n    for (var i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      now = Math.floor(now / 64);\n    }\n\n    let id = timeStampChars.join('');\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    return id;\n  };\n})();\n","import { useState, useEffect } from 'react';\nimport { firebase } from '../libs/firebase';\nimport { getCollatedTasks } from '../helpers';\nimport moment from 'moment';\n\nfunction isProjectIdNotCollatedTasks(projectId) {\n  if (projectId && !getCollatedTasks(projectId)) {\n    return true;\n  }\n}\n\nexport function useTasks(projectId) {\n  const [tasks, setTasks] = useState([]);\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  useEffect(() => {\n    const userQuery = firebase\n      .firestore()\n      .collection('tasks')\n      .where('userId', '==', 'testUser1');\n\n    let projectQuery = isProjectIdNotCollatedTasks(projectId)\n      ? userQuery.where('projectId', '==', projectId)\n      : projectId === 'TODAY'\n      ? userQuery.where('date', '==', moment().format('DD/MM/YYYY'))\n      : projectId === 'INBOX' || projectId === 0\n      ? userQuery.where('date', '==', '')\n      : userQuery;\n\n    projectQuery = projectQuery.onSnapshot(\n      snapshot => {\n        const newTasks = snapshot.docs.map(task => ({\n          ...task.data(),\n          id: task.id,\n        }));\n\n        setTasks(\n          projectId === 'NEXT_7_DAYS'\n            ? newTasks.filter(\n                task =>\n                  moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 &&\n                  task.archived === false\n              )\n            : newTasks.filter(task => task.archived === false)\n        );\n\n        setArchivedTasks(newTasks.filter(task => task.archive === true));\n      },\n      error => {\n        throw new Error(error.message);\n      }\n    );\n\n    return () => projectQuery();\n  }, [projectId]);\n\n  return { tasks, archivedTasks };\n}\n","import React, { createContext } from 'react';\nimport { useProjects } from '../hooks';\n\nexport const ProjectsContext = createContext();\n\nexport function ProjectsProvider({ children }) {\n  const { projects, setProjects } = useProjects();\n\n  return (\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { firebase } from '../libs/firebase';\n\nexport function useProjects() {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .where('userId', '==', 'testUser1')\n      .orderBy('projectId')\n      .get()\n      .then(snapshot => {\n        const allProjects = snapshot.docs.map(project => ({\n          ...project.data(),\n          docId: project.id,\n        }));\n\n        // Only set projects when project has been changed to avoid recursion error\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n          setProjects(allProjects);\n        }\n      });\n  }, [projects]);\n\n  return { projects, setProjects };\n}\n","import React, { useState, createContext } from 'react';\n\nexport const SelectedProjectsContext = createContext();\n\nexport function SelectedProjectsProvider({ children }) {\n  const [selectedProjects, setSelectedProjects] = useState('INBOX');\n\n  return (\n    <SelectedProjectsContext.Provider\n      value={{ selectedProjects, setSelectedProjects }}\n    >\n      {children}\n    </SelectedProjectsContext.Provider>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Checkbox } from '.';\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { SelectedProjectsContext, ProjectsContext } from '../contexts';\nimport { getCollatedTasks, getTitle, getCollatedTitle } from '../helpers';\nimport { AddTask } from '.';\n\nexport function Tasks() {\n  const { selectedProjects } = useContext(SelectedProjectsContext);\n  const { projects } = useContext(ProjectsContext);\n  const { tasks } = useTasks(selectedProjects);\n\n  let projectName = '';\n\n  if (projects && selectedProjects && !getCollatedTasks(selectedProjects)) {\n    projectName =\n      getTitle(projects, selectedProjects) &&\n      getTitle(projects, selectedProjects).name;\n  }\n\n  if (getCollatedTasks(selectedProjects) && selectedProjects) {\n    projectName = getCollatedTitle(collatedTasks, selectedProjects).name;\n  }\n\n  return (\n    <div className=\"tasks\">\n      <h2>{projectName}</h2>\n      <ul className=\"tasks__list\">\n        {tasks.map(task => (\n          <li key={`${task.id}`}>\n            <Checkbox id={task.id} />\n            <span>{task.task}</span>\n          </li>\n        ))}\n      </ul>\n      <AddTask />\n    </div>\n  );\n}\n","import React from 'react';\nimport { firebase } from '../libs/firebase';\n\nexport function Checkbox({ id }) {\n  const archiveTask = () => {\n    firebase.firestore().collection('tasks').doc(id).update({\n      archived: true,\n    });\n  };\n\n  return (\n    <div className=\"checkbox-holder\" onClick={() => archiveTask()}>\n      <span className=\"checkbox\" />\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { SelectedProjectsContext, ProjectsContext } from '../contexts';\nimport { IndividualProject } from '.';\n\nexport function Projects({ activeValue = true }) {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProjects } = useContext(SelectedProjectsContext);\n  const { projects } = useContext(ProjectsContext);\n\n  return (\n    projects &&\n    projects.map(project => (\n      <li\n        key={project.projectId}\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n        onClick={() => {\n          setActive(project.projectId);\n          setSelectedProjects(project.projectId);\n        }}\n      >\n        <IndividualProject project={project} />\n      </li>\n    ))\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { ProjectsContext, SelectedProjectsContext } from '../contexts';\nimport { firebase } from '../libs/firebase';\n\nexport function IndividualProject({ project }) {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { projects, setProjects } = useContext(ProjectsContext);\n  const { setSelectedProjects } = useContext(SelectedProjectsContext);\n\n  const deleteProject = docId => {\n    firebase\n      .firestore()\n      .collection('projects')\n      .doc(docId)\n      .delete()\n      .then(() => {\n        setProjects([...projects]);\n        setSelectedProjects('INBOX');\n      });\n  };\n\n  return (\n    <>\n      <span className=\"sidebar__dot\">•</span>\n      <span className=\"sidebar__project-name\">{project.name}</span>\n      <span\n        className=\"sidebar__project-delete\"\n        onClick={() => setShowConfirm(!showConfirm)}\n      >\n        <FaTrashAlt />\n        {showConfirm && (\n          <div className=\"project-delete-modal\">\n            <div className=\"project-delete-modal__inner\">\n              <p>Are you sure you want to delete this project?</p>\n              <button onClick={() => deleteProject(project.docId)}>\n                Delete\n              </button>\n              <span onClick={() => setShowConfirm(!showConfirm)}>Cancel</span>\n            </div>\n          </div>\n        )}\n      </span>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { firebase } from '../libs/firebase';\nimport { generatePushId } from '../helpers';\nimport { ProjectsContext } from '../contexts';\n\nexport function AddProject({ shouldShow = false }) {\n  const [show, setShow] = useState(shouldShow);\n  const [projectName, setProjectName] = useState('');\n\n  const projectId = generatePushId();\n  const { setProjects } = useContext(ProjectsContext);\n\n  const addProject = () =>\n    projectName &&\n    firebase\n      .firestore()\n      .collection('projects')\n      .add({ projectId, name: projectName, userId: 'testUser1' })\n      .then(() => {\n        setProjects([]);\n        setProjectName('');\n        setShow(false);\n      });\n\n  return (\n    <div className=\"add-project\">\n      {show && (\n        <div className=\"add-project__input\">\n          <input\n            value={projectName}\n            onChange={e => setProjectName(e.target.value)}\n            className=\"add-project__name\"\n            type=\"text\"\n            placeholder=\"Name your project\"\n          />\n          <button\n            className=\"add-project__submit\"\n            type=\"button\"\n            onClick={() => addProject()}\n          >\n            Add Project\n          </button>\n          <span className=\"add-project__cancel\" onClick={() => setShow(false)}>\n            Cancel\n          </span>\n        </div>\n      )}\n      <span className=\"add-project__plus\">+</span>\n      <span className=\"add-project__text\" onClick={() => setShow(!show)}>\n        Add Project\n      </span>\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\nimport moment from 'moment';\nimport { firebase } from '../libs/firebase';\nimport { SelectedProjectsContext } from '../contexts';\nimport { ProjectOverlay, TaskDate } from '.';\n\nexport function AddTask({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n}) {\n  const [task, setTask] = useState('');\n  const [taskDate, setTaskDate] = useState('');\n  const [project, setProject] = useState('');\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n\n  const { selectedProject } = useContext(SelectedProjectsContext);\n\n  const addTask = () => {\n    const projectId = project || selectedProject || 'INBOX';\n    let collatedDate = '';\n\n    if (projectId === 'TODAY') {\n      collatedDate = moment().format('DD/MM/YYYY');\n    } else if (projectId === 'NEXT_7_DAYS') {\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n    }\n\n    return (\n      task &&\n      projectId &&\n      firebase\n        .firestore()\n        .collection('tasks')\n        .add({\n          archived: false,\n          projectId,\n          task,\n          date: collatedDate || taskDate,\n          userId: 'testUser1',\n        })\n        .then(() => {\n          setTask('');\n          setProject('');\n          setShowMain('');\n          setShowProjectOverlay(false);\n        })\n    );\n  };\n\n  return (\n    <div\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\n    >\n      {showAddTaskMain && (\n        <div\n          className=\"add-task__shallow\"\n          onClick={() => setShowMain(!showMain)}\n        >\n          <span className=\"add-task__plus\">+</span>\n          <span className=\"add-task__text\">Add Task</span>\n        </div>\n      )}\n      {(showMain || showQuickAddTask) && (\n        <div className=\"add-task__main\">\n          {showQuickAddTask && (\n            <>\n              <div>\n                <h2 className=\"header\">Quick Add Task</h2>\n                <span\n                  className=\"add-task__cancel-x\"\n                  onClick={() => {\n                    setShowMain(false);\n                    setShowProjectOverlay(false);\n                    setShowQuickAddTask(false);\n                  }}\n                >\n                  x\n                </span>\n              </div>\n            </>\n          )}\n          <ProjectOverlay\n            setProject={setProject}\n            showProjectOverlay={showProjectOverlay}\n            setShowProjectOverlay={setShowProjectOverlay}\n          />\n          <TaskDate\n            setTaskDate={setTaskDate}\n            showTaskDate={showTaskDate}\n            setShowTaskDate={setShowTaskDate}\n          />\n          <input\n            className=\"add-task__content\"\n            type=\"text\"\n            value={task}\n            onChange={e => setTask(e.target.value)}\n          />\n          <button\n            className=\"add-task__submit\"\n            onClick={() =>\n              showQuickAddTask\n                ? addTask() && setShowQuickAddTask(false)\n                : addTask()\n            }\n          >\n            Add Task\n          </button>\n          {!showQuickAddTask && (\n            <span\n              className=\"add-task__cancel\"\n              onClick={() => {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n              }}\n            >\n              Cancel\n            </span>\n          )}\n          <span\n            className=\"add-task__project\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className=\"add-task__date\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { ProjectsContext } from '../contexts';\n\nexport function ProjectOverlay({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) {\n  const { projects } = useContext(ProjectsContext);\n\n  return (\n    projects &&\n    showProjectOverlay && (\n      <div className=\"project-overlay\">\n        <ul className=\"project-overlay__list\">\n          {projects.map(project => (\n            <li\n              key={project.projectId}\n              onClick={() => {\n                setProject(project.projectId);\n                setShowProjectOverlay(false);\n              }}\n            >\n              {project.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\n\nexport function TaskDate({ setTaskDate, showTaskDate, setShowTaskDate }) {\n  return (\n    showTaskDate && (\n      <div className=\"task-date\">\n        <ul className=\"task-date__list\">\n          <li\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().format('DD/MM/YYYY'));\n            }}\n          >\n            <span>\n              <FaSpaceShuttle />\n            </span>\n            <span>Today</span>\n          </li>\n          <li\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n            }}\n          >\n            <span>\n              <FaSun />\n            </span>\n            <span>Tomorrow</span>\n          </li>\n          <li\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(7, 'day').format('DD/MM/YYYY'));\n            }}\n          >\n            <span>\n              <FaRegPaperPlane />\n            </span>\n            <span>Next Week</span>\n          </li>\n        </ul>\n      </div>\n    )\n  );\n}\n","import React, { useState } from 'react';\nimport { FaPizzaSlice, FaBars } from 'react-icons/fa';\nimport { AddTask } from '../components';\n\nexport function Header({ darkMode, setDarkMode, showSidebar, setShowSidebar }) {\n  const [shouldShowMain, setShouldShowMain] = useState(false);\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n\n  return (\n    <header className=\"header\">\n      <nav>\n        <div className=\"features\">\n          <div className=\"toggle\" onClick={() => setShowSidebar(!showSidebar)}>\n            <FaBars />\n          </div>\n          <div className=\"logo\">\n            <img src=\"/images/logo.png\" alt=\"Todoist\" />\n          </div>\n        </div>\n        <div className=\"settings\">\n          <ul>\n            <li\n              className=\"settings__add\"\n              onClick={() => {\n                setShowQuickAddTask(true);\n                setShouldShowMain(true);\n              }}\n            >\n              +\n            </li>\n            <li\n              className=\"settings__darkmode\"\n              onClick={() => setDarkMode(!darkMode)}\n            >\n              <FaPizzaSlice />\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <AddTask\n        showAddTaskMain={false}\n        shouldShowMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  );\n}\n","import React from 'react';\nimport { Sidebar } from '.';\nimport { Tasks } from '../components';\n\nexport function Content({ showSidebar }) {\n  return (\n    <section className=\"content\">\n      <Sidebar showSidebar={showSidebar} />\n      <Tasks />\n    </section>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { SelectedProjectsContext } from '../contexts';\nimport { Projects, AddProject } from '../components';\nimport {\n  FaChevronDown,\n  FaInbox,\n  FaRegCalendarAlt,\n  FaRegCalendar,\n} from 'react-icons/fa';\n\nexport function Sidebar({ showSidebar }) {\n  const { setSelectedProjects } = useContext(SelectedProjectsContext);\n  const [active, setActive] = useState('inbox');\n  const [showProjects, setShowProjects] = useState(true);\n\n  return (\n    <div className={showSidebar ? 'sidebar' : 'sidebar hide'}>\n      <ul className=\"sidebar__generic\">\n        <li\n          className={active === 'inbox' ? 'active' : undefined}\n          onClick={() => {\n            setSelectedProjects('INBOX');\n            setActive('inbox');\n          }}\n        >\n          <span>\n            <FaInbox />\n          </span>\n          <span>Inbox</span>\n        </li>\n        <li\n          className={active === 'today' ? 'active' : undefined}\n          onClick={() => {\n            setSelectedProjects('TODAY');\n            setActive('today');\n          }}\n        >\n          <span>\n            <FaRegCalendar />\n          </span>\n          <span>Today</span>\n        </li>\n        <li\n          className={active === 'next_7_days' ? 'active' : undefined}\n          onClick={() => {\n            setSelectedProjects('NEXT_7_DAYS');\n            setActive('next_7_days');\n          }}\n        >\n          <span>\n            <FaRegCalendarAlt />\n          </span>\n          <span>Next 7 days</span>\n        </li>\n      </ul>\n      <div\n        className=\"sidebar__middle\"\n        onClick={() => setShowProjects(showProjects => !showProjects)}\n      >\n        <span>\n          <FaChevronDown\n            className={!showProjects ? 'hidden-projects' : undefined}\n          />\n        </span>\n        <h2>Projects</h2>\n      </div>\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n      {showProjects && <AddProject />}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Header, Content } from './layouts';\nimport { ProjectsProvider, SelectedProjectsProvider } from './contexts';\n\nexport function App({ darkModeDefault = false }) {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n  const [showSidebar, setShowSidebar] = useState(true);\n\n  return (\n    <SelectedProjectsProvider>\n      <ProjectsProvider>\n        <main className={darkMode ? 'darkMode' : undefined}>\n          <Header\n            darkMode={darkMode}\n            setDarkMode={setDarkMode}\n            showSidebar={showSidebar}\n            setShowSidebar={setShowSidebar}\n          />\n          <Content showSidebar={showSidebar} />\n        </main>\n      </ProjectsProvider>\n    </SelectedProjectsProvider>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport 'normalize.css';\nimport './sass/main.scss';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}